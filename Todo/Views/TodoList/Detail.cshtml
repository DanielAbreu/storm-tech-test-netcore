@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Services
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul class="list-group">

        <li class="list-group-item">
            <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                <strong>Add New Item</strong>
            </a><br>
            <input type="checkbox" id="hideDoneButton" onclick="hideTasksDone()" name="Hide tasks done">
            <label for="hideDoneButton"> Hide tasks done</label>
        </li>

        @foreach (var item in Model.Items.OrderBy(item => item.Importance))
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li id="item-@item.TodoItemId" class="list-group-item @contextualClass">
                
                <div class="row">

                <div class="col-md-8">
                    <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                        @if (item.IsDone)
                        {
                            <s>@item.Title</s>
                        }
                        else
                        {
                            <text>@item.Title</text>
                        }
                    </a>
                </div>

                <div class="col-md-4 text-right">
                    <small>
                        @item.ResponsibleParty.UserName

                        <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30"/>

                    </small>
                </div>
                </div>

            </li>
        }
    </ul>
</div>

<script type="text/javascript">
    let items = @Json.Serialize(Model.Items);

    function hideTasksDone(){
        let hideCheckbox = document.getElementById("hideDoneButton");

        let itemsDone = items.filter(item => item.isDone);

        for(let i = 0; i < itemsDone.length; ++i){
            let itemNotDoneElem = document.getElementById("item-" + itemsDone[i].todoItemId);
            itemNotDoneElem.style.display = hideCheckbox.checked ? 'none' : 'block';
        }
    }
</script>